<?php
namespace OFFLINE\SiteSearch\Classes\Providers;

use Illuminate\Database\Eloquent\Collection;
use OFFLINE\SiteSearch\Models\Settings;
use Feegleweb\Octoshop\Models\Product;

/**
 * Searches the contents generated by the
 * Rainlab.Blog plugin
 *
 * @package OFFLINE\SiteSearch\Classes\Providers
 */
class OctoshopProductsResultsProvider extends ResultsProvider
{
    /**
     * Runs the search for this provider.
     *
     * @return ResultsProvider
     */
    public function search()
    {
        if ( ! $this->isInstalledAndEnabled()) {
            return $this;
        }

        foreach ($this->products() as $product) {
            // Make this result more relevant, if the query is found in the title
            $relevance = stripos($product->title, $this->query) === false ? 1 : 2;

            $thumb = (is_object($product->images) && get_class($product->images) == 'Illuminate\Database\Eloquent\Collection') ? $product->images->where('attachment_id',$product->id) : new \stdClass();

            $field_data =
            [   'title'     =>  $product->title
            ,   'text'      =>  $product->intro
            ,   'url'       =>  $this->getUrl($product)
            ,   'thumb'     =>  $thumb
            ];

            $this->addResult($field_data, $relevance);
        }

        return $this;
    }

    /**
     * Get all posts with matching title or content.
     *
     * @return Collection
     */
    protected function products()
    {
        return Product::enabled()->withImages()
                   ->where('title', 'like', "%{$this->query}%")
                   ->orWhere('description', 'like', "%{$this->query}%")
                   ->orderBy('updated_at', 'desc')
                   ->get();
    }

    /**
     * Checks if the Feegleweb.Octoshop Plugin is installed and
     * enabled in the config.
     *
     * @return bool
     */
    protected function isInstalledAndEnabled()
    {
        return $this->isPluginAvailable($this->identifier)
        && Settings::get('octoshop_products_enabled', true);
    }

    /**
     * Genreates the url to a shop prodcuct.
     *
     * @param $post
     *
     * @return string
     */
    protected function getUrl($product)
    {
        $url = trim(Settings::get('octoshop_products_itemurl', '/products/product'), '/');

        return implode('/', [$url, $product->slug]);
    }

    /**
     * Display name for this provider.
     *
     * @return mixed
     */
    public function displayName()
    {
        return Settings::get('octoshop_products_label', 'Product');
    }

    /**
     * Returns the plugin's identifier string.
     *
     * @return string
     */
    public function identifier()
    {
        return 'Feegleweb.Octoshop';
    }

}
